name: Release and Build Docker Image

on:
  push:
    branches:
      - master
    paths:
      - 'version.json'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git fetch --prune --unshallow || true

      - name: Read version from version.json
        id: get_version
        run: |
          VERSION=$(jq -r .version version.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Generate Pretty Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"%s")
          else
            COMMITS=$(git log "$PREVIOUS_TAG"..HEAD --pretty=format:"%s")
          fi

          FEATURES=""
          FIXES=""
          CHORES=""
          OTHERS=""

          while read -r line; do
            if [[ "$line" == feat:* ]]; then
              FEATURES+="- ${line#feat: }"$'\n'
            elif [[ "$line" == fix:* ]]; then
              FIXES+="- ${line#fix: }"$'\n'
            elif [[ "$line" == chore:* ]]; then
              CHORES+="- ${line#chore: }"$'\n'
            else
              OTHERS+="- $line"$'\n'
            fi
          done <<< "$COMMITS"

          {
            echo "✨ **Features**"
            echo "$FEATURES"
            echo ""
            echo "🐛 **Bug Fixes**"
            echo "$FIXES"
            echo ""
            echo "🛠 **Chores**"
            echo "$CHORES"
            echo ""
            echo "📦 **Others**"
            echo "$OTHERS"
          } > changelog.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body_path: changelog.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            faizakbar18/phpnuxbill-docker:${{ needs.release.outputs.version }}
            faizakbar18/phpnuxbill-docker:latest
